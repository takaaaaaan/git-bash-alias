# generated by Git for Windows
test -f ~/.profile && . ~/.profile
test -f ~/.bashrc && . ~/.bashrc
if [ -f ~/.bashrc ]; then
    source ~/.bashrc
fi

#python env関数

# 가상환경 목록
function listenvs() {
    echo "📁 로컬 가상환경:"
    if [ -d . ]; then
        for d in */; do
            if [ -f "$d/Scripts/activate" ] || [ -f "$d/bin/activate" ]; then
                echo "  - ${d%/}"
            fi
        done
    fi

    echo "🌐 글로벌 가상환경（~/venvs）:"
    if [ -d "$HOME/venvs" ]; then
        for d in "$HOME/venvs"/*; do
            if [ -f "$d/Scripts/activate" ] || [ -f "$d/bin/activate" ]; then
                echo "  - $(basename "$d")"
            fi
        done
    else
        echo "  (~/venvs 디렉토리가 존재하지 않습니다)"
    fi
}

# 가상환경 활성화
function actenv() {
    local name="$1"
    local local_path="./$name/Scripts/activate"
    local global_path="$HOME/venvs/$name/Scripts/activate"

    if [ -f "$local_path" ]; then
        source "$local_path"
        echo "✅ 로컬 가상환경 활성화: $name"
    elif [ -f "$global_path" ]; then
        source "$global_path"
        echo "✅ 글로벌 가상환경 활성화: $name"
    else
        echo "❌ 해당 가상환경이 없습니다: $name (./ 및 ~/venvs에서 검색)"
    fi
}

# 가상환경 비활성화
function deactenv() {
    if declare -f deactivate > /dev/null; then
        deactivate
        echo "🔻 비활성화됨"
    else
        echo "⚠️ 활성화된 환경이 없습니다"
    fi
}

# 가상환경 생성
function createenv() {
    local mode="$1"
    local name="$2"

    if [ -z "$mode" ] || [ -z "$name" ]; then
        echo "❗사용법: createenv [loc|glo] env_name"
        return 1
    fi

    local target_path=""
    if [ "$mode" == "loc" ]; then
        target_path="./$name"
    elif [ "$mode" == "glo" ]; then
        target_path="$HOME/venvs/$name"
    else
        echo "❗모드는 'loc' 또는 'glo'를 지정해주세요"
        return 1
    fi

    python -m venv "$target_path"
    echo "🎉 Created $name at $target_path"
}

# 가상환경 삭제
function deleteenv() {
    local mode="$1"
    local name="$2"

    if [ -z "$mode" ] || [ -z "$name" ]; then
        echo "❗사용법: deleteenv [loc|glo] env_name"
        return 1
    fi

    local target_path=""
    if [ "$mode" == "loc" ]; then
        target_path="./$name"
    elif [ "$mode" == "glo" ]; then
        target_path="$HOME/venvs/$name"
    else
        echo "❗모드는 'loc' 또는 'glo'를 지정해주세요"
        return 1
    fi

    if [ ! -d "$target_path" ]; then
        echo "❌ 가상환경을 못찾습니다.: $target_path"
        return 1
    fi

    # 확인 프롬프트
    read -p "⚠️ 정말 삭제하시겠습니까? '$target_path' (y/n): " confirm
    if [[ "$confirm" == "y" || "$confirm" == "Y" ]]; then
        rm -rf "$target_path"
        echo "🗑️  삭제했습니다: $target_path"
    else
        echo "🚫 삭제를 취소했습니다"
    fi
}
